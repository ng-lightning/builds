import { Component, Input, Output, EventEmitter, ChangeDetectionStrategy } from '@angular/core';
import { uniqueId } from '../util/util';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
import * as i2 from "../icons/svg";
import * as i3 from "../util/outlet";
export class NglAccordionItem {
    constructor(element, renderer) {
        this.toggle = new EventEmitter();
        this.uid = uniqueId('accordion-item');
        renderer.addClass(element.nativeElement, 'slds-accordion__list-item');
    }
    onToggle() {
        this.toggle.emit();
    }
}
NglAccordionItem.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.9", ngImport: i0, type: NglAccordionItem, deps: [{ token: i0.ElementRef }, { token: i0.Renderer2 }], target: i0.ɵɵFactoryTarget.Component });
NglAccordionItem.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "15.2.9", type: NglAccordionItem, selector: "li[nglAccordionItem]", inputs: { isActive: "isActive", section: "section" }, outputs: { toggle: "toggle" }, ngImport: i0, template: "\n<section class=\"slds-accordion__section\" [class.slds-is-open]=\"isActive\">\n  <div class=\"slds-accordion__summary\">\n    <h3 class=\"slds-accordion__summary-heading\" (click)=\"onToggle()\">\n      <button class=\"slds-button slds-button_reset slds-accordion__summary-action\" [attr.aria-controls]=\"uid\" [attr.aria-expanded]=\"isActive\" type=\"button\">\n        <svg class=\"slds-accordion__summary-action-icon slds-button__icon slds-button__icon_left\" nglIconName=\"utility:switch\"></svg><span class=\"slds-truncate\" [nglInternalOutlet]=\"section.label\" [nglInternalOutletContext]=\"{$implicit: section.labelContext}\"></span>\n      </button>\n    </h3>\n  </div>\n  <div class=\"slds-accordion__content\" [attr.hidden]=\"isActive ? null : ''\" [id]=\"uid\">\n    <ng-container *ngIf=\"isActive\">\n      <ng-template [ngTemplateOutlet]=\"section.templateRef\"></ng-template>\n    </ng-container>\n  </div>\n</section>", dependencies: [{ kind: "directive", type: i1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: i1.NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet", "ngTemplateOutletInjector"] }, { kind: "component", type: i2.NglIconSvg, selector: "svg[nglIconName]", inputs: ["nglIconName", "xPos"] }, { kind: "component", type: i3.NglInternalOutlet, selector: "[nglInternalOutlet]", inputs: ["nglInternalOutlet", "nglInternalOutletContext"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.9", ngImport: i0, type: NglAccordionItem, decorators: [{
            type: Component,
            args: [{ selector: 'li[nglAccordionItem]', changeDetection: ChangeDetectionStrategy.OnPush, template: "\n<section class=\"slds-accordion__section\" [class.slds-is-open]=\"isActive\">\n  <div class=\"slds-accordion__summary\">\n    <h3 class=\"slds-accordion__summary-heading\" (click)=\"onToggle()\">\n      <button class=\"slds-button slds-button_reset slds-accordion__summary-action\" [attr.aria-controls]=\"uid\" [attr.aria-expanded]=\"isActive\" type=\"button\">\n        <svg class=\"slds-accordion__summary-action-icon slds-button__icon slds-button__icon_left\" nglIconName=\"utility:switch\"></svg><span class=\"slds-truncate\" [nglInternalOutlet]=\"section.label\" [nglInternalOutletContext]=\"{$implicit: section.labelContext}\"></span>\n      </button>\n    </h3>\n  </div>\n  <div class=\"slds-accordion__content\" [attr.hidden]=\"isActive ? null : ''\" [id]=\"uid\">\n    <ng-container *ngIf=\"isActive\">\n      <ng-template [ngTemplateOutlet]=\"section.templateRef\"></ng-template>\n    </ng-container>\n  </div>\n</section>" }]
        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.Renderer2 }]; }, propDecorators: { isActive: [{
                type: Input
            }], section: [{
                type: Input
            }], toggle: [{
                type: Output
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWNjb3JkaW9uLWl0ZW0uanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9uZy1saWdodG5pbmcvc3JjL2xpYi9hY2NvcmRpb24vYWNjb3JkaW9uLWl0ZW0udHMiLCIuLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9uZy1saWdodG5pbmcvc3JjL2xpYi9hY2NvcmRpb24vYWNjb3JkaW9uLWl0ZW0uaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxNQUFNLEVBQUUsWUFBWSxFQUFFLHVCQUF1QixFQUF5QixNQUFNLGVBQWUsQ0FBQztBQUV2SCxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sY0FBYyxDQUFDOzs7OztBQVF4QyxNQUFNLE9BQU8sZ0JBQWdCO0lBVTNCLFlBQVksT0FBbUIsRUFBRSxRQUFtQjtRQUoxQyxXQUFNLEdBQUcsSUFBSSxZQUFZLEVBQUUsQ0FBQztRQUV0QyxRQUFHLEdBQUcsUUFBUSxDQUFDLGdCQUFnQixDQUFDLENBQUM7UUFHL0IsUUFBUSxDQUFDLFFBQVEsQ0FBQyxPQUFPLENBQUMsYUFBYSxFQUFFLDJCQUEyQixDQUFDLENBQUM7SUFDeEUsQ0FBQztJQUVELFFBQVE7UUFDTixJQUFJLENBQUMsTUFBTSxDQUFDLElBQUksRUFBRSxDQUFDO0lBQ3JCLENBQUM7OzZHQWhCVSxnQkFBZ0I7aUdBQWhCLGdCQUFnQixpSkNWN0IseTZCQWNVOzJGREpHLGdCQUFnQjtrQkFONUIsU0FBUzsrQkFFRSxzQkFBc0IsbUJBQ2YsdUJBQXVCLENBQUMsTUFBTTt5SEFLdEMsUUFBUTtzQkFBaEIsS0FBSztnQkFFRyxPQUFPO3NCQUFmLEtBQUs7Z0JBRUksTUFBTTtzQkFBZixNQUFNIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBJbnB1dCwgT3V0cHV0LCBFdmVudEVtaXR0ZXIsIENoYW5nZURldGVjdGlvblN0cmF0ZWd5LCBFbGVtZW50UmVmLCBSZW5kZXJlcjIgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IE5nbEFjY29yZGlvblNlY3Rpb24gfSBmcm9tICcuL2FjY29yZGlvbi1zZWN0aW9uJztcbmltcG9ydCB7IHVuaXF1ZUlkIH0gZnJvbSAnLi4vdXRpbC91dGlsJztcblxuQENvbXBvbmVudCh7XG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAYW5ndWxhci1lc2xpbnQvY29tcG9uZW50LXNlbGVjdG9yXG4gIHNlbGVjdG9yOiAnbGlbbmdsQWNjb3JkaW9uSXRlbV0nLFxuICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaCxcbiAgdGVtcGxhdGVVcmw6ICcuL2FjY29yZGlvbi1pdGVtLmh0bWwnLFxufSlcbmV4cG9ydCBjbGFzcyBOZ2xBY2NvcmRpb25JdGVtIHtcblxuICBASW5wdXQoKSBpc0FjdGl2ZTogYm9vbGVhbjtcblxuICBASW5wdXQoKSBzZWN0aW9uOiBOZ2xBY2NvcmRpb25TZWN0aW9uO1xuXG4gIEBPdXRwdXQoKSB0b2dnbGUgPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG5cbiAgdWlkID0gdW5pcXVlSWQoJ2FjY29yZGlvbi1pdGVtJyk7XG5cbiAgY29uc3RydWN0b3IoZWxlbWVudDogRWxlbWVudFJlZiwgcmVuZGVyZXI6IFJlbmRlcmVyMikge1xuICAgIHJlbmRlcmVyLmFkZENsYXNzKGVsZW1lbnQubmF0aXZlRWxlbWVudCwgJ3NsZHMtYWNjb3JkaW9uX19saXN0LWl0ZW0nKTtcbiAgfVxuXG4gIG9uVG9nZ2xlKCkge1xuICAgIHRoaXMudG9nZ2xlLmVtaXQoKTtcbiAgfVxufVxuIiwiXG48c2VjdGlvbiBjbGFzcz1cInNsZHMtYWNjb3JkaW9uX19zZWN0aW9uXCIgW2NsYXNzLnNsZHMtaXMtb3Blbl09XCJpc0FjdGl2ZVwiPlxuICA8ZGl2IGNsYXNzPVwic2xkcy1hY2NvcmRpb25fX3N1bW1hcnlcIj5cbiAgICA8aDMgY2xhc3M9XCJzbGRzLWFjY29yZGlvbl9fc3VtbWFyeS1oZWFkaW5nXCIgKGNsaWNrKT1cIm9uVG9nZ2xlKClcIj5cbiAgICAgIDxidXR0b24gY2xhc3M9XCJzbGRzLWJ1dHRvbiBzbGRzLWJ1dHRvbl9yZXNldCBzbGRzLWFjY29yZGlvbl9fc3VtbWFyeS1hY3Rpb25cIiBbYXR0ci5hcmlhLWNvbnRyb2xzXT1cInVpZFwiIFthdHRyLmFyaWEtZXhwYW5kZWRdPVwiaXNBY3RpdmVcIiB0eXBlPVwiYnV0dG9uXCI+XG4gICAgICAgIDxzdmcgY2xhc3M9XCJzbGRzLWFjY29yZGlvbl9fc3VtbWFyeS1hY3Rpb24taWNvbiBzbGRzLWJ1dHRvbl9faWNvbiBzbGRzLWJ1dHRvbl9faWNvbl9sZWZ0XCIgbmdsSWNvbk5hbWU9XCJ1dGlsaXR5OnN3aXRjaFwiPjwvc3ZnPjxzcGFuIGNsYXNzPVwic2xkcy10cnVuY2F0ZVwiIFtuZ2xJbnRlcm5hbE91dGxldF09XCJzZWN0aW9uLmxhYmVsXCIgW25nbEludGVybmFsT3V0bGV0Q29udGV4dF09XCJ7JGltcGxpY2l0OiBzZWN0aW9uLmxhYmVsQ29udGV4dH1cIj48L3NwYW4+XG4gICAgICA8L2J1dHRvbj5cbiAgICA8L2gzPlxuICA8L2Rpdj5cbiAgPGRpdiBjbGFzcz1cInNsZHMtYWNjb3JkaW9uX19jb250ZW50XCIgW2F0dHIuaGlkZGVuXT1cImlzQWN0aXZlID8gbnVsbCA6ICcnXCIgW2lkXT1cInVpZFwiPlxuICAgIDxuZy1jb250YWluZXIgKm5nSWY9XCJpc0FjdGl2ZVwiPlxuICAgICAgPG5nLXRlbXBsYXRlIFtuZ1RlbXBsYXRlT3V0bGV0XT1cInNlY3Rpb24udGVtcGxhdGVSZWZcIj48L25nLXRlbXBsYXRlPlxuICAgIDwvbmctY29udGFpbmVyPlxuICA8L2Rpdj5cbjwvc2VjdGlvbj4iXX0=